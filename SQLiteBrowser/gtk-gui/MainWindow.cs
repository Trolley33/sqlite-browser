
// This file has been generated by the GUI designer. Do not modify.

public partial class MainWindow
{
	private global::Gtk.UIManager UIManager;

	private global::Gtk.Action FileAction;

	private global::Gtk.Action NewDatabaseAction;

	private global::Gtk.Action OpenDatabaseAction;

	private global::Gtk.Action SaveDatabaseAction;

	private global::Gtk.Action EditAction;

	private global::Gtk.Action PreferencesAction;

	private global::Gtk.Action NewTableAction;

	private global::Gtk.Action DatabaseAction;

	private global::Gtk.Action NewTableAction1;

	private global::Gtk.Action RunQueryAction;

	private global::Gtk.Action CreateTableAction;

	private global::Gtk.VBox root_vbox;

	private global::Gtk.MenuBar menubar;

	private global::Gtk.ComboBox table_dropdown;

	private global::Gtk.Table table_view;

	protected virtual void Build()
	{
		global::Stetic.Gui.Initialize(this);
		// Widget MainWindow
		this.UIManager = new global::Gtk.UIManager();
		global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup("Default");
		this.FileAction = new global::Gtk.Action("FileAction", global::Mono.Unix.Catalog.GetString("File"), null, null);
		this.FileAction.ShortLabel = global::Mono.Unix.Catalog.GetString("File");
		w1.Add(this.FileAction, "<Primary><Mod2>f");
		this.NewDatabaseAction = new global::Gtk.Action("NewDatabaseAction", global::Mono.Unix.Catalog.GetString("_New Database"), null, null);
		this.NewDatabaseAction.ShortLabel = global::Mono.Unix.Catalog.GetString("fileMenuPressed");
		w1.Add(this.NewDatabaseAction, "<Primary><Mod2>n");
		this.OpenDatabaseAction = new global::Gtk.Action("OpenDatabaseAction", global::Mono.Unix.Catalog.GetString("_Open Database"), null, null);
		this.OpenDatabaseAction.ShortLabel = global::Mono.Unix.Catalog.GetString("_Open");
		w1.Add(this.OpenDatabaseAction, "<Primary><Mod2>o");
		this.SaveDatabaseAction = new global::Gtk.Action("SaveDatabaseAction", global::Mono.Unix.Catalog.GetString("_Save Database"), null, null);
		this.SaveDatabaseAction.ShortLabel = global::Mono.Unix.Catalog.GetString("_Save");
		w1.Add(this.SaveDatabaseAction, "<Primary><Mod2>s");
		this.EditAction = new global::Gtk.Action("EditAction", global::Mono.Unix.Catalog.GetString("Edit"), null, null);
		this.EditAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Edit");
		w1.Add(this.EditAction, null);
		this.PreferencesAction = new global::Gtk.Action("PreferencesAction", global::Mono.Unix.Catalog.GetString("_Preferences"), null, null);
		this.PreferencesAction.ShortLabel = global::Mono.Unix.Catalog.GetString("_Preferences");
		w1.Add(this.PreferencesAction, "<Primary><Mod2>p");
		this.NewTableAction = new global::Gtk.Action("NewTableAction", global::Mono.Unix.Catalog.GetString("New Table"), null, null);
		this.NewTableAction.ShortLabel = global::Mono.Unix.Catalog.GetString("New Table");
		w1.Add(this.NewTableAction, null);
		this.DatabaseAction = new global::Gtk.Action("DatabaseAction", global::Mono.Unix.Catalog.GetString("Database"), null, null);
		this.DatabaseAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Database");
		w1.Add(this.DatabaseAction, null);
		this.NewTableAction1 = new global::Gtk.Action("NewTableAction1", global::Mono.Unix.Catalog.GetString("New Table"), null, null);
		this.NewTableAction1.ShortLabel = global::Mono.Unix.Catalog.GetString("New Table");
		w1.Add(this.NewTableAction1, null);
		this.RunQueryAction = new global::Gtk.Action("RunQueryAction", global::Mono.Unix.Catalog.GetString("Run Query"), null, null);
		this.RunQueryAction.Sensitive = false;
		this.RunQueryAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Run Query");
		w1.Add(this.RunQueryAction, null);
		this.CreateTableAction = new global::Gtk.Action("CreateTableAction", global::Mono.Unix.Catalog.GetString("Create Table"), null, null);
		this.CreateTableAction.Sensitive = false;
		this.CreateTableAction.ShortLabel = global::Mono.Unix.Catalog.GetString("Create Table");
		w1.Add(this.CreateTableAction, null);
		this.UIManager.InsertActionGroup(w1, 0);
		this.AddAccelGroup(this.UIManager.AccelGroup);
		this.Name = "MainWindow";
		this.Title = global::Mono.Unix.Catalog.GetString("SQLite Browser");
		this.WindowPosition = ((global::Gtk.WindowPosition)(4));
		// Container child MainWindow.Gtk.Container+ContainerChild
		this.root_vbox = new global::Gtk.VBox();
		this.root_vbox.Name = "root_vbox";
		this.root_vbox.Spacing = 6;
		// Container child root_vbox.Gtk.Box+BoxChild
		this.UIManager.AddUiFromString(@"<ui><menubar name='menubar'><menu name='FileAction' action='FileAction'><menuitem name='NewDatabaseAction' action='NewDatabaseAction'/><menuitem name='OpenDatabaseAction' action='OpenDatabaseAction'/><menuitem name='SaveDatabaseAction' action='SaveDatabaseAction'/></menu><menu name='EditAction' action='EditAction'><menuitem name='PreferencesAction' action='PreferencesAction'/></menu><menu name='DatabaseAction' action='DatabaseAction'><menuitem name='CreateTableAction' action='CreateTableAction'/><menuitem name='RunQueryAction' action='RunQueryAction'/></menu></menubar></ui>");
		this.menubar = ((global::Gtk.MenuBar)(this.UIManager.GetWidget("/menubar")));
		this.menubar.Name = "menubar";
		this.root_vbox.Add(this.menubar);
		global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.root_vbox[this.menubar]));
		w2.Position = 0;
		w2.Expand = false;
		w2.Fill = false;
		// Container child root_vbox.Gtk.Box+BoxChild
		this.table_dropdown = global::Gtk.ComboBox.NewText();
		this.table_dropdown.Name = "table_dropdown";
		this.root_vbox.Add(this.table_dropdown);
		global::Gtk.Box.BoxChild w3 = ((global::Gtk.Box.BoxChild)(this.root_vbox[this.table_dropdown]));
		w3.Position = 1;
		w3.Expand = false;
		w3.Fill = false;
		// Container child root_vbox.Gtk.Box+BoxChild
		this.table_view = new global::Gtk.Table(((uint)(3)), ((uint)(3)), false);
		this.table_view.Name = "table_view";
		this.table_view.RowSpacing = ((uint)(6));
		this.table_view.ColumnSpacing = ((uint)(6));
		this.root_vbox.Add(this.table_view);
		global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.root_vbox[this.table_view]));
		w4.Position = 2;
		this.Add(this.root_vbox);
		if ((this.Child != null))
		{
			this.Child.ShowAll();
		}
		this.DefaultWidth = 616;
		this.DefaultHeight = 300;
		this.Show();
		this.DeleteEvent += new global::Gtk.DeleteEventHandler(this.OnDeleteEvent);
		this.NewDatabaseAction.Activated += new global::System.EventHandler(this.NewFile);
		this.OpenDatabaseAction.Activated += new global::System.EventHandler(this.OpenFile);
		this.SaveDatabaseAction.Activated += new global::System.EventHandler(this.SaveFile);
		this.CreateTableAction.Activated += new global::System.EventHandler(this.CreateTable);
	}
}
